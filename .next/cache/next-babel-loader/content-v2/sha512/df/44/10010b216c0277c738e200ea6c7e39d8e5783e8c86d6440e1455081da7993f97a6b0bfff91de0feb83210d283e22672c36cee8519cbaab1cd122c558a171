{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/amir/Files/projects/resume/src/components/Avatar/index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nconst Avatar = (_ref) => {\n  let {\n    className = '',\n    alt,\n    title\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"className\", \"alt\", \"title\"]);\n\n  return /*#__PURE__*/_jsxDEV(\"img\", _objectSpread({\n    className: `${styles.Avatar} ${className}`,\n    title: title,\n    alt: \"alt\"\n  }, rest), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }, this);\n};\n\nexport default Avatar;","map":{"version":3,"sources":["/home/amir/Files/projects/resume/src/components/Avatar/index.tsx"],"names":["Avatar","className","alt","title","rest","styles"],"mappings":";;;;;;;;;;;;;AAGA,MAAMA,MAAyB,GAAG,UAK5B;AAAA,MAL6B;AAClCC,IAAAA,SAAS,GAAG,EADsB;AAElCC,IAAAA,GAFkC;AAGlCC,IAAAA;AAHkC,GAK7B;AAAA,MADFC,IACE;;AACL,sBACC;AACC,IAAA,SAAS,EAAG,GAAEC,MAAM,CAACL,MAAO,IAAGC,SAAU,EAD1C;AAEC,IAAA,KAAK,EAAEE,KAFR;AAGC,IAAA,GAAG,EAAC;AAHL,KAIKC,IAJL;AAAA;AAAA;AAAA;AAAA,UADD;AAQA,CAdD;;AAgBA,eAAeJ,MAAf","sourcesContent":["import { VFC } from 'react';\nimport { IAvatarProps } from './types';\n\nconst Avatar: VFC<IAvatarProps> = ({\n\tclassName = '',\n\talt,\n\ttitle,\n\t...rest\n}) => {\n\treturn (\n\t\t<img\n\t\t\tclassName={`${styles.Avatar} ${className}`}\n\t\t\ttitle={title}\n\t\t\talt=\"alt\"\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n\nexport default Avatar;\n"]},"metadata":{},"sourceType":"module"}